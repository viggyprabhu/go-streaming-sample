// Code generated by protoc-gen-go. DO NOT EDIT.
// source: stream-proto.proto

package proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type StreamInput struct {
	FileName             string   `protobuf:"bytes,1,opt,name=FileName,proto3" json:"FileName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamInput) Reset()         { *m = StreamInput{} }
func (m *StreamInput) String() string { return proto.CompactTextString(m) }
func (*StreamInput) ProtoMessage()    {}
func (*StreamInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_proto_12563bdd07fac1c0, []int{0}
}
func (m *StreamInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamInput.Unmarshal(m, b)
}
func (m *StreamInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamInput.Marshal(b, m, deterministic)
}
func (dst *StreamInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamInput.Merge(dst, src)
}
func (m *StreamInput) XXX_Size() int {
	return xxx_messageInfo_StreamInput.Size(m)
}
func (m *StreamInput) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamInput.DiscardUnknown(m)
}

var xxx_messageInfo_StreamInput proto.InternalMessageInfo

func (m *StreamInput) GetFileName() string {
	if m != nil {
		return m.FileName
	}
	return ""
}

type StreamOutput struct {
	TimeStramp           string   `protobuf:"bytes,1,opt,name=TimeStramp,proto3" json:"TimeStramp,omitempty"`
	Data                 string   `protobuf:"bytes,2,opt,name=Data,proto3" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamOutput) Reset()         { *m = StreamOutput{} }
func (m *StreamOutput) String() string { return proto.CompactTextString(m) }
func (*StreamOutput) ProtoMessage()    {}
func (*StreamOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_proto_12563bdd07fac1c0, []int{1}
}
func (m *StreamOutput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamOutput.Unmarshal(m, b)
}
func (m *StreamOutput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamOutput.Marshal(b, m, deterministic)
}
func (dst *StreamOutput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamOutput.Merge(dst, src)
}
func (m *StreamOutput) XXX_Size() int {
	return xxx_messageInfo_StreamOutput.Size(m)
}
func (m *StreamOutput) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamOutput.DiscardUnknown(m)
}

var xxx_messageInfo_StreamOutput proto.InternalMessageInfo

func (m *StreamOutput) GetTimeStramp() string {
	if m != nil {
		return m.TimeStramp
	}
	return ""
}

func (m *StreamOutput) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func init() {
	proto.RegisterType((*StreamInput)(nil), "proto.StreamInput")
	proto.RegisterType((*StreamOutput)(nil), "proto.StreamOutput")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RequestServiceClient is the client API for RequestService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RequestServiceClient interface {
	HandleStream(ctx context.Context, in *StreamInput, opts ...grpc.CallOption) (RequestService_HandleStreamClient, error)
}

type requestServiceClient struct {
	cc *grpc.ClientConn
}

func NewRequestServiceClient(cc *grpc.ClientConn) RequestServiceClient {
	return &requestServiceClient{cc}
}

func (c *requestServiceClient) HandleStream(ctx context.Context, in *StreamInput, opts ...grpc.CallOption) (RequestService_HandleStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RequestService_serviceDesc.Streams[0], "/proto.RequestService/HandleStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &requestServiceHandleStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type RequestService_HandleStreamClient interface {
	Recv() (*StreamOutput, error)
	grpc.ClientStream
}

type requestServiceHandleStreamClient struct {
	grpc.ClientStream
}

func (x *requestServiceHandleStreamClient) Recv() (*StreamOutput, error) {
	m := new(StreamOutput)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// RequestServiceServer is the server API for RequestService service.
type RequestServiceServer interface {
	HandleStream(*StreamInput, RequestService_HandleStreamServer) error
}

func RegisterRequestServiceServer(s *grpc.Server, srv RequestServiceServer) {
	s.RegisterService(&_RequestService_serviceDesc, srv)
}

func _RequestService_HandleStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(StreamInput)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RequestServiceServer).HandleStream(m, &requestServiceHandleStreamServer{stream})
}

type RequestService_HandleStreamServer interface {
	Send(*StreamOutput) error
	grpc.ServerStream
}

type requestServiceHandleStreamServer struct {
	grpc.ServerStream
}

func (x *requestServiceHandleStreamServer) Send(m *StreamOutput) error {
	return x.ServerStream.SendMsg(m)
}

var _RequestService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.RequestService",
	HandlerType: (*RequestServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "HandleStream",
			Handler:       _RequestService_HandleStream_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "stream-proto.proto",
}

func init() { proto.RegisterFile("stream-proto.proto", fileDescriptor_stream_proto_12563bdd07fac1c0) }

var fileDescriptor_stream_proto_12563bdd07fac1c0 = []byte{
	// 213 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x4e, 0x31, 0x4b, 0xc6, 0x30,
	0x10, 0x35, 0xa2, 0xa2, 0x67, 0x51, 0x38, 0x97, 0x52, 0x41, 0xa4, 0x93, 0x0e, 0x86, 0xa2, 0xa3,
	0x5b, 0x11, 0xa9, 0x83, 0x5a, 0x5a, 0xc1, 0x39, 0xb6, 0x87, 0x06, 0x92, 0x26, 0xa6, 0xa9, 0xfa,
	0xf3, 0x25, 0x89, 0x48, 0xbf, 0xe5, 0xee, 0xdd, 0x7b, 0x8f, 0x77, 0x0f, 0x70, 0xf6, 0x8e, 0x84,
	0xbe, 0xb2, 0xce, 0x78, 0xc3, 0xe3, 0xc4, 0xdd, 0xb8, 0xca, 0x4b, 0x38, 0xec, 0xa3, 0xf8, 0x30,
	0xd9, 0xc5, 0x63, 0x01, 0xfb, 0xf7, 0x52, 0xd1, 0x93, 0xd0, 0x94, 0xb3, 0x73, 0x76, 0x71, 0xd0,
	0xfd, 0xdf, 0x65, 0x0d, 0x59, 0xb2, 0x3e, 0x2f, 0x3e, 0x78, 0xcf, 0x00, 0x5e, 0xa4, 0xa6, 0xde,
	0x3b, 0xa1, 0xed, 0x9f, 0x7b, 0xc5, 0x20, 0xc2, 0xce, 0x9d, 0xf0, 0x22, 0xdf, 0x8e, 0x4a, 0xc4,
	0xd7, 0x8f, 0x70, 0xd4, 0xd1, 0xe7, 0x42, 0xb3, 0xef, 0xc9, 0x7d, 0xc9, 0x81, 0xf0, 0x16, 0xb2,
	0x46, 0x4c, 0xa3, 0xa2, 0x94, 0x8d, 0x98, 0xfa, 0xf1, 0x55, 0xab, 0xe2, 0x64, 0x83, 0x4b, 0xef,
	0xcb, 0xad, 0x8a, 0xd5, 0x15, 0x9c, 0x4a, 0xc3, 0xdf, 0x9d, 0x1d, 0x38, 0xfd, 0x08, 0x6d, 0x15,
	0xcd, 0xfc, 0x83, 0x94, 0x32, 0xdf, 0xc6, 0xa9, 0xb1, 0x3e, 0x6e, 0x02, 0x7e, 0x0d, 0xb8, 0x0d,
	0x01, 0x2d, 0x7b, 0xdb, 0x8b, 0x49, 0x37, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x5a, 0x03, 0x32,
	0x31, 0x13, 0x01, 0x00, 0x00,
}
